{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/congson/congnghephanmem/react-native-mobile/src/layouts/auth/sign-up.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as eva from '@eva-design/eva';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Button, Input, Text, Icon } from '@ui-kitten/components';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { PersonIcon, EmailIcon } from \"../assets/icons\";\nimport backgroundImage from \"./assets/image-background.jpg\";\nexport function SignUpLayout(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fullname = _React$useState4[0],\n      setFullname = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      rePassword = _React$useState8[0],\n      setRepassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      passwordVisible = _React$useState10[0],\n      setPasswordVisible = _React$useState10[1];\n\n  var onSignUpButtonPress = function onSignUpButtonPress() {};\n\n  var onSignInButtonPress = function onSignInButtonPress() {\n    navigation && navigation.navigate('SignIn');\n  };\n\n  var onPasswordIconPress = function onPasswordIconPress() {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  var EyeIcon = function EyeIcon(props) {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: onPasswordIconPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, React.createElement(Icon, _extends({}, props, {\n      name: passwordVisible ? 'eye-off' : 'eye',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    bounces: \"false\",\n    bouncesZoom: \"false\",\n    alwaysBounceVertical: \"false\",\n    alwaysBounceHorizontal: \"false\",\n    enableOnAndroid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    style: {\n      width: '100%',\n      height: '100%',\n      flex: 1\n    },\n    source: backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.headerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    category: \"h1\",\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"SagoStay\")), React.createElement(View, {\n    style: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, React.createElement(Input, {\n    status: \"control\",\n    placeholder: \"H\\u1ECD t\\xEAn\",\n    value: fullname,\n    accessoryRight: PersonIcon,\n    onChangeText: setFullname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), React.createElement(Input, {\n    style: styles.emailInput,\n    status: \"control\",\n    placeholder: \"Email\",\n    value: email,\n    accessoryRight: EmailIcon,\n    onChangeText: setEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), React.createElement(Input, {\n    style: styles.passwordInput,\n    status: \"control\",\n    placeholder: \"M\\u1EADt kh\\u1EA9u\",\n    value: password,\n    accessoryRight: EyeIcon,\n    secureTextEntry: passwordVisible,\n    onChangeText: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), React.createElement(Input, {\n    style: styles.passwordInput,\n    status: \"control\",\n    placeholder: \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u\",\n    value: rePassword,\n    accessoryRight: EyeIcon,\n    secureTextEntry: passwordVisible,\n    onChangeText: setRepassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), React.createElement(Button, {\n    style: styles.signUpButton,\n    status: \"control\",\n    size: \"giant\",\n    onPress: onSignUpButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"\\u0110\\u0102NG K\\xDD\"), React.createElement(Button, {\n    style: styles.signInButton,\n    appearance: \"ghost\",\n    status: \"control\",\n    onPress: onSignInButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n ? \\u0110\\u0103ng nh\\u1EADp\"))));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.45)'\n  }),\n  headerContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 216\n  },\n  formContainer: {\n    flex: 1,\n    marginTop: 32,\n    paddingHorizontal: 16\n  },\n  signUpButton: {\n    marginHorizontal: 16\n  },\n  signInButton: {\n    marginVertical: 12,\n    marginHorizontal: 16\n  },\n  forgotPasswordContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  passwordInput: {\n    marginTop: 16\n  },\n  emailInput: {\n    marginTop: 16\n  },\n  forgotPasswordButton: {\n    paddingHorizontal: 0\n  }\n});","map":{"version":3,"sources":["/Users/congson/congnghephanmem/react-native-mobile/src/layouts/auth/sign-up.js"],"names":["React","eva","Button","Input","Text","Icon","KeyboardAwareScrollView","PersonIcon","EmailIcon","backgroundImage","SignUpLayout","navigation","useState","email","setEmail","fullname","setFullname","password","setPassword","rePassword","setRepassword","passwordVisible","setPasswordVisible","onSignUpButtonPress","onSignInButtonPress","navigate","onPasswordIconPress","EyeIcon","props","flexGrow","width","height","flex","styles","overlay","headerContainer","color","formContainer","emailInput","passwordInput","signUpButton","signInButton","StyleSheet","create","container","absoluteFillObject","backgroundColor","justifyContent","alignItems","minHeight","marginTop","paddingHorizontal","marginHorizontal","marginVertical","forgotPasswordContainer","flexDirection","forgotPasswordButton"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as eva from '@eva-design/eva';\nimport { StyleSheet, View, TouchableWithoutFeedback, ImageBackground } from 'react-native';\nimport { Button, Input, Text, Icon } from '@ui-kitten/components';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { PersonIcon, EmailIcon } from '../assets/icons';\nimport  backgroundImage  from './assets/image-background.jpg';\n\nexport function SignUpLayout({ navigation }) {\n\n    const [ email, setEmail ] = React.useState('');\n    const [ fullname, setFullname ] = React.useState('');\n    const [ password, setPassword ] = React.useState('');\n    const [ rePassword, setRepassword ] = React.useState('');\n    const [ passwordVisible, setPasswordVisible ] = React.useState(true);\n\n\n \n    const onSignUpButtonPress = () => {\n        \n      };\n\n      const onSignInButtonPress = () => {\n        navigation && navigation.navigate('SignIn');\n      };\n\n    const onPasswordIconPress = () => {\n        setPasswordVisible(!passwordVisible);\n      };\n\n    const EyeIcon = (props) => (\n        <TouchableWithoutFeedback onPress={onPasswordIconPress}>\n          <Icon {...props} name={passwordVisible ? 'eye-off' : 'eye'}/>\n        </TouchableWithoutFeedback>\n      );\n    return(\n        <KeyboardAwareScrollView\n        contentContainerStyle= {{ flexGrow: 1 }}\n        bounces= 'false'\n        bouncesZoom= 'false'\n        alwaysBounceVertical= 'false'\n        alwaysBounceHorizontal= 'false'\n        enableOnAndroid = {true}>\n            <ImageBackground style={{width:'100%',height:'100%',flex:1}} source={backgroundImage} >\n                <View style={styles.overlay}>\n                    <View style={styles.headerContainer}>\n                        <Text category='h1' style={{color:'white'}}>SagoStay</Text>\n                    </View>\n                    <View style={styles.formContainer}>\n                        <Input\n                            status='control'\n                            placeholder='Họ tên'\n                            value={fullname}\n                            accessoryRight={PersonIcon}\n                            onChangeText={setFullname}\n                        />   \n                        <Input\n                            style={styles.emailInput}\n                            status='control'\n                            placeholder='Email'\n                            value={email}\n                            accessoryRight={EmailIcon}\n                            onChangeText={setEmail}\n                        />\n\n                        <Input\n                            style={styles.passwordInput}\n                            status='control'\n                            placeholder='Mật khẩu'\n                            value={password}\n                            accessoryRight={EyeIcon}\n                            secureTextEntry={passwordVisible}\n                            onChangeText={setPassword}\n                        />\n                        <Input\n                            style={styles.passwordInput}\n                            status='control'\n                            placeholder='Nhập lại mật khẩu'\n                            value={rePassword}\n                            accessoryRight={EyeIcon}\n                            secureTextEntry={passwordVisible}\n                            onChangeText={setRepassword}\n                        />                            \n                    </View>\n\n                    <Button\n                        style={styles.signUpButton}\n                        status='control'\n                        size='giant'\n                        onPress={onSignUpButtonPress}>\n                        ĐĂNG KÝ\n                    </Button>\n                    <Button\n                        style={styles.signInButton}\n                        appearance='ghost'\n                        status='control'\n                        onPress={onSignInButtonPress}>\n                        Đã có tài khoản ? Đăng nhập\n                    </Button>\n                </View>\n            </ImageBackground>\n        </KeyboardAwareScrollView>    \n); \n\n};\nconst styles = StyleSheet.create({\ncontainer: {\n    flex : 1,\n},\noverlay:{\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.45)', \n},\nheaderContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 216,       \n  },\n  formContainer: {\n    flex: 1,\n    marginTop: 32,\n    paddingHorizontal: 16,\n\n  },\n  signUpButton: {\n    marginHorizontal: 16,\n  },\n  signInButton: {\n    marginVertical: 12,\n    marginHorizontal: 16,\n  },\n  forgotPasswordContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  passwordInput: {\n    marginTop: 16,\n  },\n  emailInput:{\n    marginTop: 16,\n  },\n  forgotPasswordButton: {\n    paddingHorizontal: 0,\n  },\n})\n\n\n"]},"metadata":{},"sourceType":"module"}